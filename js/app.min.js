/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-inner-declarations */\n/* eslint-disable no-unused-vars */\n// import * as flsFunction from './modules/functions.js';\n\n// flsFunction.isWebp();\n\n\n\ntry {\n  // Поиск\n  const searchModal = document.querySelector('.promo__menu-search');\n  const searchClose = document.querySelector('.search__close');\n  const searchEmpty = document.querySelector('.search__empty');\n  const searchHeaderBtn = document.querySelector('.header__list-item.icon-search');\n  // const searchModal = document.querySelector('.promo__menu-search');\n\n  searchHeaderBtn.addEventListener('click', () => {\n    searchModal.style.display = 'block';\n  });\n\n  searchClose.addEventListener('click', () => {\n    searchModal.style.display = 'none';\n  });\n\n  searchEmpty.addEventListener('click', () => {\n    document.querySelector('.promo__menu-input input').value = '';\n  });\n\n  // Слайдер\n  // eslint-disable-next-line no-undef\n  const swiper = new Swiper('.swiper', {\n  // Optional parameters\n    direction: 'horizontal',\n    loop: true,\n    autoplay: true,\n    speed: 300,\n    spaceBetween: 25,\n    autoHeight: false,\n    slidesPerView: 3.3,\n\n    // If we need pagination\n    pagination: {\n      el: '.swiper-pagination',\n    },\n\n    // Navigation arrows\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n\n    // And if we need scrollbar\n    scrollbar: {\n      el: '.swiper-scrollbar',\n    },\n    breakpoints: {\n      // when window width is >= 320px\n      280: {\n        slidesPerView: 1,\n      },\n      400: {\n        slidesPerView: 1.5,\n      },\n      500: {\n        slidesPerView: 1.8,\n      },\n      // when window width is >= 640px\n      993: {\n        slidesPerView: 2.5,\n      },\n      1200: {\n        slidesPerView: 3.3,\n      },\n    },\n  });\n\n  // название товара\n  const cardTitle = document.querySelectorAll('.new__card-title');\n\n  for (let k = 0; k < cardTitle.length; k++) {\n    if (cardTitle[k].trim().length > 37) {\n      cardTitle[k].textContent = `${cardTitle[k].innerHTML.trim().substr(0, 37)}...`;\n    }\n  }\n\n  const url = 'db.json';\n  // const url = 'http://localhost:3000/goods';\n\n  const createNode = (elem) => document.createElement(elem);\n\n  const append = (parent, element) => parent.appendChild(element);\n\n  const setData = (dataInfo) => {\n    const newGoods = document.querySelector('.new__goods');\n    dataInfo.forEach((productData) => {\n      const good = createNode('a');\n      good.classList.add('new__card');\n      good.setAttribute('href', productData.link);\n      append(newGoods, good);\n      good.innerHTML = `\n      <div class=\"new__card-img\">\n        <img src=\"${productData.image}\" alt=\"${productData.name}\">\n      </div>\n      <div class=\"new__card-price\">\n        ${productData.price}\n      </div>\n      <div class=\"new__card-title\">\n          ${productData.name}\n      </div>\n      <div class=\"new__card-art\">\n          Артикул: ${productData.art}\n      </div>\n      <button class=\"new__card-cart\">\n          В корзину\n      </button>\n      `;\n    });\n    const title = document.querySelectorAll('.new__card-title');\n    title.forEach((element) => {\n      if (element.textContent.trim().length > 37) {\n        // eslint-disable-next-line no-param-reassign\n        element.textContent = `${element.textContent.trim().substr(0, 37)}...`;\n      }\n    });\n  };\n\n  const addCart = function () {\n    // Cart\n    const plus = document.querySelectorAll('.new__card-cart');\n    const cartProductsList = document.querySelector('.cart-content__list');\n    const fullPrice = document.querySelector('.full__price');\n    const cartBtnBig = document.querySelector('.cart__btn');\n    const cartQuantity = document.querySelector('.header__cart span');\n    const cartContentProduct = cartProductsList.querySelectorAll('.cart__content-item');\n    let price = 0;\n    let counter = 1;\n\n    const randomId = () => Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    const priceWithoutSpaces = (str) => str.replace(/ +/g, ' ');\n    const normalPrice = (str) => String(str).replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, '1');\n\n    const plusFullPrice = function (currentPrice) {\n      price += currentPrice;\n      return price;\n    };\n\n    const minusFullPrice = function (currentPrice, counterProduct) {\n      price -= currentPrice * counterProduct;\n      return price;\n    };\n\n    const printFullPrice = () => {\n      fullPrice.textContent = `Итого: ${+price} ₽`;\n      if (price === 0) {\n        document.querySelector('.cart-block__empty').style.display = 'block';\n        fullPrice.style.display = 'none';\n        cartBtnBig.style.display = '';\n        document.querySelector('.cart-block__body').style.overflow = 'visible';\n      }\n    };\n\n    const printQuantity = () => {\n      const { length } = cartProductsList.children;\n      cartQuantity.textContent = length;\n    };\n\n    const generateCartProdust = function (img, title, goodPrice, id) {\n      return `\n      <li class=\"cart__content-item\">\n          <article class=\"cart__content-product cart-product\" data-id=\"${id}\">\n              <div class=\"cart-product__img\">\n                <img src=\"${img}\" alt=\"\" class = \"cart-product__img\">\n              </div>\n              <div class=\"cart__product-text\">\n                  <h3 class=\"cart__product-title\">\n                      ${title}\n                  </h3>\n                  <span class=\"cart__product-price\"> ${normalPrice(goodPrice)}₽</span>\n              </div>\n          </article>\n          <div class=\"cart__product-quantity\">\n\n            <span class=\"cart__product-count\">1</span>\n          \n          </div>\n      </li>\n      `;\n      // <button class=\"cart__product_plus\">+</button>\n      // <button class=\"cart__product_minus\">-</button>\n    };\n\n    const deleteProducts = (productParent) => {\n      // minus price\n      const currentPrice = parseInt(priceWithoutSpaces(productParent.querySelector('.cart__product-price').textContent), 10);\n      const counterProduct = productParent.querySelector('.cart__product-count').textContent;\n      minusFullPrice(currentPrice, counterProduct);\n      // print full price\n      printFullPrice();\n      // remove product\n      productParent.remove();\n      // count quantity\n      printQuantity();\n    };\n\n    plus.forEach((el) => {\n      el.closest('.new__card').setAttribute('data-id', randomId());\n      el.addEventListener('click', (e) => {\n        e.preventDefault();\n        cartBtnBig.style.display = 'flex';\n        fullPrice.style.display = 'block';\n        document.querySelector('.cart-block__empty').style.display = 'none';\n        document.querySelector('.cart-block__body').style.overflow = 'auto';\n        const self = e.currentTarget;\n        const parent = self.closest('.new__card');\n        const { id } = parent.dataset;\n        const img = parent.querySelector('.new__card-img img').getAttribute('src');\n        const title = parent.querySelector('.new__card-title').textContent;\n        const priceString = parent.querySelector('.new__card-price').textContent;\n        const priceNumber = parseInt(priceWithoutSpaces(priceString), 10);\n\n        // sum\n        plusFullPrice(priceNumber);\n        // full price\n        printFullPrice();\n\n        // КОЛИЧЕСТВО ТОВАРОВ В КОРЗИНЕ\n        let cartProduct = document.querySelectorAll('.cart-product');\n        // const countCartProduct = document.querySelector('.cart__product-count');\n\n        if (cartProduct.length === 0) {\n          cartProductsList.insertAdjacentHTML('beforeend', generateCartProdust(img, title, priceNumber, id));\n        }\n\n        for (let i = 0; i < cartProduct.length; i++) {\n          cartProduct = document.querySelectorAll('.cart-product');\n          if (id === cartProduct[i].dataset.id) {\n            counter = cartProduct[i].parentElement.querySelector('.cart__product-count').textContent;\n            counter++;\n            cartProduct[i].parentElement.querySelector('.cart__product-count').textContent = counter;\n            break;\n          } else if ((i === cartProduct.length - 1) && (id !== cartProduct[i].dataset.id)) {\n            cartProductsList.insertAdjacentHTML('beforeend', generateCartProdust(img, title, priceNumber, id));\n          }\n        }\n\n        // quantity\n        printQuantity();\n\n        // определить минус и плюс именно в event.target?\n        // const minusQuantityProduct = document.querySelector('.cart__product_minus');\n        // const plusQuantityProduct = document.querySelector('.cart__product_plus');\n\n        // const minusProduct = (productParent) => {\n        //   counter = +productParent.querySelector('.cart__product-count').textContent;\n        //   document.querySelector('.cart__product-count').textContent = counter - 1;\n        // };\n\n        // const plusProduct = (productParent) => {\n        //   counter = +productParent.querySelector('.cart__product-count').textContent;\n        //   document.querySelector('.cart__product-count').textContent = counter + 1;\n        // };\n\n      // minusQuantityProduct.addEventListener('click', (event, productParent) => {\n      //   const currentPrice = parseInt(priceWithoutSpaces(productParent.querySelector('.cart__product-price').textContent), 10);\n      //   minusProduct(event.target.closest('.cart__content-item'));\n      //   minusFullPrice(currentPrice);\n      //   printFullPrice();\n      // });\n      // plusQuantityProduct.addEventListener('click', (event) => {\n      //   plusProduct(event.target.closest('.cart__content-item'));\n      //   plusFullPrice();\n      //   printFullPrice();\n      // });\n      });\n    });\n\n    cartProductsList.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (event.target.classList.contains('cart-product__delete') || event.target.classList.contains('product__delete-img')) {\n        deleteProducts(event.target.closest('.cart__content-item'));\n      }\n    });\n  };\n\n  const getInfo = () => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .then((data) => addCart(data))\n      .catch((error) => console.error(error));\n  };\n\n  getInfo();\n\n  // Модальное окно с выбором города\n  const modal = document.querySelector('.modal');\n  const modalClose = document.querySelector('.modal__close');\n  const modalTowns = document.querySelector('.modal__towns');\n  const modalButton = document.querySelector('.header__menu-town');\n\n  modalClose.addEventListener('click', () => {\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n  });\n\n  const openModalTown = () => {\n    modal.classList.add('show');\n  };\n\n  modalTowns.addEventListener('click', (event) => {\n    event.preventDefault();\n    modalButton.textContent = event.target.textContent;\n    localStorage.setItem('Населенный пункт', event.target.textContent);\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n  });\n\n  if (localStorage.getItem('Населенный пункт') === null) {\n    modalButton.textContent = 'Улан-Удэ';\n    setTimeout(openModalTown, 3000);\n  } else {\n    modalButton.textContent = localStorage.getItem('Населенный пункт');\n  }\n\n  // Каталог\n  const catalog = document.querySelector('.promo__menu-wrapper');\n  const catalogClose = document.querySelector('.catalog__close');\n  const catalogBtn = document.querySelector('.icon-catalog');\n\n  catalogBtn.addEventListener('click', () => {\n  //   catalogBtn.classList.toggle('catalog_active');\n    catalog.classList.add('active');\n  });\n\n  catalogClose.addEventListener('click', () => {\n  //   catalog.classList.toggle('catalog_active');\n    catalog.classList.remove('active');\n  });\n} catch (e) {\n  console.log(e);\n} finally {\n  // Выбор города\n  const town = document.querySelector('.header__submenu');\n  const modalButton = document.querySelector('.header__menu-town');\n\n  // eslint-disable-next-line no-inner-declarations\n  function openModal() {\n    town.classList.toggle('open');\n  }\n\n  modalButton.addEventListener('click', openModal);\n\n  function closeModal() {\n    town.classList.toggle('open');\n  }\n\n  document.addEventListener('click', (e) => {\n    if (e.target !== modalButton && town.classList.contains('open')) {\n      closeModal();\n    }\n  });\n\n  document.addEventListener('keydown', (e) => {\n    if (e.code === 'Escape' && town.classList.contains('open')) {\n      closeModal();\n    }\n  });\n\n  town.addEventListener('click', (event) => {\n    event.preventDefault();\n    modalButton.textContent = event.target.textContent;\n    localStorage.setItem('Населенный пункт', event.target.textContent);\n    closeModal();\n  });\n\n  // Блок \"Корзина\"\n  const cartBlock = document.querySelector('.header__cart-block');\n  const cartBtn = document.querySelector('.icon-cart');\n  const cartBlockClose = document.querySelector('.cart-block__close');\n\n  cartBtn.addEventListener('click', () => {\n    cartBlock.style.display = 'block';\n  });\n\n  cartBlockClose.addEventListener('click', () => {\n    cartBlock.style.display = '';\n  });\n\n  // Гамбургер\n  const menu = document.querySelector('.menu-hamburger__list');\n  const menuItem = document.querySelectorAll('.menu-hamburger__item');\n  const hamburger = document.querySelector('.hamburger');\n\n  hamburger.addEventListener('click', () => {\n    hamburger.classList.toggle('hamburger_active');\n    menu.classList.toggle('active');\n  });\n\n  menuItem.forEach((item) => {\n    item.addEventListener('click', () => {\n      hamburger.classList.toggle('hamburger_active');\n      menu.classList.toggle('active');\n    });\n  });\n\n  // Accordion\n  const accord = document.getElementsByClassName('footer__accordion');\n  let j;\n\n  // eslint-disable-next-line no-plusplus\n  for (j = 0; j < accord.length; j++) {\n    accord[j].addEventListener('click', (event) => {\n      event.target.classList.toggle('active');\n      const panel = event.target.nextElementSibling;\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n      } else {\n        panel.style.maxHeight = `${panel.scrollHeight}px`;\n      }\n    });\n  }\n\n  // Многоуровневое меню на мобильных устройствах\n  const winWidth = document.documentElement.clientWidth;\n\n  const listItem = document.querySelectorAll('.promo__menu-item > a');\n  const listSubmenuItems = document.querySelectorAll('.promo__submenu');\n\n  // eslint-disable-next-line no-inner-declarations\n  function subOpen(event) {\n    event.preventDefault();\n    const subMenu = event.target.nextElementSibling.nextElementSibling;\n    subMenu.classList.add('active');\n    const back = document.createElement('li');\n    back.classList.add('back-to-menulist');\n    back.innerHTML = '< Назад';\n    const subList = subMenu.querySelector('ul');\n    subList.insertAdjacentElement('afterbegin', back);\n\n    const backToMenuList = document.querySelector('.back-to-menulist');\n\n    backToMenuList.addEventListener('click', () => {\n      listSubmenuItems.forEach((el) => {\n        subMenu.classList.remove('active');\n      });\n      subList.firstChild.remove();\n    });\n  }\n\n  listItem.forEach((item) => {\n    const opener = document.createElement('span');\n    opener.innerHTML = '>>';\n    item.insertAdjacentElement('afterend', opener);\n    if (winWidth >= 769) {\n      // Выпадающее меню\n      listItem.forEach((element) => {\n        element.addEventListener('mouseover', (event) => {\n          if (document.querySelector('.promo__submenu.show') !== null) {\n            document.querySelector('.promo__submenu.show').classList.remove('show');\n          }\n          event.target.classList.add('show');\n          const listItemId = event.target.dataset.id;\n          const submenuActive = document.querySelector(`div[data-id=\"${listItemId}\"]`);\n          submenuActive.classList.add('show');\n        });\n        listSubmenuItems.forEach((listSubmenuItem) => {\n          listSubmenuItem.addEventListener('mouseleave', () => {\n            if (document.querySelector('.promo__submenu.show') !== null) {\n              document.querySelector('.promo__submenu.show').classList.remove('show');\n            }\n          });\n        });\n      });\n    } else {\n      listSubmenuItems.forEach((el) => {\n        el.classList.remove('promo__submenu');\n        el.classList.add('sub-menu');\n      });\n      item.addEventListener('click', subOpen);\n    }\n  });\n\n  // Появление кнопки \"наверх\"\n  window.addEventListener('scroll', () => {\n    if (window.pageYOffset >= 500) {\n      document.querySelector('.arrow-top').style.display = 'flex';\n    } else {\n      document.querySelector('.arrow-top').style.display = 'none';\n    }\n  });\n\n  // Переход наверх по кнопке\n  const btnToTop = document.querySelector('.arrow-top');\n\n  btnToTop.addEventListener('click', () => {\n    document.querySelector('.start').scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  });\n}\n\nconst mainImg = document.querySelector('.card__images-img');\nconst sliderImg = document.querySelectorAll('.card__slider-image');\nsliderImg.forEach((image) => {\n  image.addEventListener('click', () => {\n    mainImg.setAttribute('src', image.getAttribute('src'));\n    const sliderImgActive = document.querySelector('.card__slider-image.active');\n    sliderImgActive.classList.remove('active');\n    image.classList.add('active');\n  });\n});\n\n\n//# sourceURL=webpack://gulp2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;